name: Deploy full site + built /brand

on:
  push: { branches: [ main ] }
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Newest deploy wins to avoid racing runs
concurrency:
  group: website-pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with: { node-version: 20 }

      # --- Build only the brand app with correct subpath ---
      - name: Install deps (brand)
        working-directory: brand
        run: npm i

      - name: Build brand for /brand
        working-directory: brand
        run: npx vite build --base=/brand/

      # --- Stage entire website (everything in repo) ---
      - name: Stage full site into publish/
        run: |
          rm -rf publish
          mkdir -p publish
          # Copy everything in repo root (keeps your whole site), EXCEPT:
          #   - CI files, sources, build dirs we do not want to serve
          rsync -av \
            --exclude ".git/" \
            --exclude ".github/" \
            --exclude "node_modules/" \
            --exclude "**/node_modules/" \
            --exclude "publish/" \
            --exclude "**/.next/" \
            --exclude "**/dist/" \
            --exclude "**/build/" \
            --exclude "brand/" \
            ./ publish/

      # --- Overwrite /brand with the built files (and ONLY those) ---
      - name: Place built /brand (overwrite dev files)
        run: |
          rm -rf publish/brand
          mkdir -p publish/brand
          cp -R brand/dist/* publish/brand/

      # Optional: Pages quirk to avoid Jekyll processing (keeps folders starting with underscores)
      - name: Add .nojekyll
        run: touch publish/.nojekyll

      # If you already have a CNAME file in repo root, copy it through automatically
      - name: Preserve CNAME if present
        run: |
          if [ -f CNAME ]; then cp CNAME publish/CNAME; fi

      # --- Guards: block bad deploys that cause white screens ---
      - name: Guard: brand bundles present
        run: |
          ls -la publish/brand/assets || (echo "❌ /brand/assets missing"; exit 1)

      - name: Guard: brand base path correct
        run: |
          if ! grep -q 'src="/brand/assets/' publish/brand/index.html; then
            echo "❌ publish/brand/index.html missing /brand/assets script paths"
            sed -n '1,140p' publish/brand/index.html || true
            exit 1
          fi

      - name: Guard: dev HTML not leaked
        run: |
          ! grep -q '/src/main\.tsx' publish/brand/index.html || (echo "❌ dev HTML leaked into /brand"; exit 1)

      # Debug snapshot (top of built HTML and assets listing)
      - name: Snapshot
        run: |
          echo "::group::INDEX (brand)"
          sed -n '1,80p' publish/brand/index.html || true
          echo "::endgroup::"
          echo "::group::ASSETS (brand)"
          ls -la publish/brand/assets || true
          echo "::endgroup::"

      - name: Upload Pages artifact (entire site)
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./publish

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
