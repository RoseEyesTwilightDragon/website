# File: .github/workflows/pages-vite.yml
name: Deploy Vite (brand/) to GitHub Pages (custom domain)

on:
  push: { branches: [ main ] }
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Newest push wins (prevents "higher priority" races)
concurrency:
  group: website-pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show tree (debug)
        run: |
          echo "::group::ROOT"; ls -la; echo "::endgroup::"
          echo "::group::BRAND"; ls -la brand || true; echo "::endgroup::"
          echo "::group::SRC"; ls -la brand/src || true; echo "::endgroup::"

      - name: Setup Node
        uses: actions/setup-node@v4
        with: { node-version: 20 }

      - name: Install deps (no lockfile needed)
        working-directory: brand
        run: npm i

      # üîë Custom domain -> root path -> absolute base `/`
      - name: Build (Vite, base=/)
        working-directory: brand
        run: npx vite build --base=/

      # SPA deep-link fallback + Pages quirks
      - name: Add 404 fallback, .nojekyll, CNAME
        run: |
          cp brand/dist/index.html brand/dist/404.html
          touch brand/dist/.nojekyll
          echo "website.com" > brand/dist/CNAME

      # Optional convenience: make /brand redirect to /
      - name: Add /brand redirect page
        run: |
          mkdir -p brand/dist/brand
          cat > brand/dist/brand/index.html <<'HTML'
          <!doctype html><meta charset="utf-8">
          <meta http-equiv="refresh" content="0; url=/" />
          <script>location.replace("/");</script>
          HTML

      # Guards to prevent silent bad deploys
      - name: Ensure JS bundles exist
        run: |
          ls -la brand/dist/assets || (echo "‚ùå No JS bundles in dist/assets"; exit 1)

      - name: FAIL if dev entry (src/main.tsx) leaked
        run: |
          if grep -qE '/src/main\.tsx' brand/dist/index.html; then
            echo "‚ùå dev HTML found: /src/main.tsx referenced in built index.html"
            sed -n '1,120p' brand/dist/index.html || true
            exit 1
          fi

      - name: Verify absolute root asset paths
        run: |
          # For base=/, scripts must be /assets/*.js (absolute root)
          if ! grep -Eq 'src="/assets/.*\.js"' brand/dist/index.html; then
            echo "‚ùå Built HTML does not reference /assets/*.js (wrong base?)"
            sed -n '1,120p' brand/dist/index.html || true
            exit 1
          fi
          echo "‚úÖ Built HTML references /assets/*.js"

      - name: Print built index + assets (debug)
        run: |
          echo "::group::INDEX (top 80)"
          sed -n '1,80p' brand/dist/index.html
          echo "::endgroup::"
          echo "::group::ASSETS"
          ls -la brand/dist
          ls -la brand/dist/assets
          echo "::endgroup::"

      - name: Upload Pages artifact (dist only)
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./brand/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
